

if getgenv().isInstanceAllowedName == "TheOneAndOnlyHahaha" then
    local RunService = game:GetService("RunService")
    gethiddenstuff = {}
    gethiddenstuff.MakeCustomOutline = function(Main)
        local rainbowColor = Instance.new("UIStroke",Main)
        rainbowColor.Thickness = 2
        rainbowColor.ApplyStrokeMode = "Border"
        rainbowColor.Color = Color3.new(1,1,1)
        rainbowColor.Transparency = 0
        local colorgrad = Instance.new("UIGradient",rainbowColor)
        colorgrad.Color = ColorSequence.new(
            Color3.fromHex("ed7d1a"),
            Color3.fromHex("211aed")
            )
        if Main 
        and Main:FindFirstChild("UIStroke")
        and Main:FindFirstChild("UIStroke"):FindFirstChild("UIGradient") then
            uiconnection = RunService.RenderStepped:Connect(function(deltaTime)
                if Main 
                and Main:FindFirstChild("UIStroke")
                and Main:FindFirstChild("UIStroke"):FindFirstChild("UIGradient") then
                    uiG = Main.UIStroke.UIGradient
                    uiG.Rotation = (uiG.Rotation + 1) % 333
                end
            end)
        end
    end
    
    gethiddenstuff.MakeCustomTopBar = function(Main)
        local customTopBar = Instance.new("UIStroke",Main.Topbar)
        customTopBar.Thickness = 2
        customTopBar.ApplyStrokeMode = "Border"
        customTopBar.Color = Color3.new(1,1,1)
        customTopBar.Transparency = 0
        local customgradcolor = Instance.new("UIGradient",customTopBar)
        customgradcolor.Color = ColorSequence.new(
            Color3.fromHex("ed7d1a"),
            Color3.fromHex("211aed")
            )
        if Main.Topbar
        and Main.Topbar:FindFirstChild("UIStroke")
        and Main.Topbar:FindFirstChild("UIStroke"):FindFirstChild("UIGradient") then
            uitopbarconnection = RunService.RenderStepped:Connect(function(deltaTime)
                if Main.Topbar
                and Main.Topbar:FindFirstChild("UIStroke")
                and Main.Topbar:FindFirstChild("UIStroke"):FindFirstChild("UIGradient") then
                    uitopG = Main.Topbar.UIStroke.UIGradient
                    uitopG.Rotation = (uitopG.Rotation + 1) % 333
                end
            end)
        end
    end
    gethiddenstuff.MakeCustomTabs = function(Main)
        local TabButtongr = Main:FindFirstChild("TabList"):FindFirstChild("Template")
        local tabcolor = Instance.new("UIGradient",TabButtongr)
        tabcolor.Color = ColorSequence.new(
            Color3.fromHex("ed7d1a"),
            Color3.fromHex("211aed")
        )
        if Main:FindFirstChild("TabList")
        and Main:FindFirstChild("TabList"):FindFirstChild("Template"):FindFirstChild("UIGradient") then
            uitablistconn = RunService.RenderStepped:Connect(function(deltaTime)
            if Main:FindFirstChild("TabList")
            and Main:FindFirstChild("TabList"):FindFirstChild("Template"):FindFirstChild("UIGradient") then
                    uitabG = Main.TabList.Template.UIGradient
                    uitabG.Rotation = (uitabG.Rotation + 1) % 333
                    print(uitabG.Rotation)
                end
            end)
        end
    end
    gethiddenstuff.MakeCustomToggles = function(Main)
        local Toggless = Main:FindFirstChild("Elements"):FindFirstChild("Template"):FindFirstChild("Toggle"):FindFirstChild("Switch")
        local togglecg = Instance.new("UIGradient",Toggless)
        togglecg.Color = ColorSequence.new(
            Color3.fromHex("ed7d1a"),
            Color3.fromHex("211aed")
        )
        if Main:FindFirstChild("Elements")
        and Main:FindFirstChild("Elements"):FindFirstChild("Template"):FindFirstChild("Toggle"):FindFirstChild("Switch"):FindFirstChild("UIGradient") then
            uitoggleconn = RunService.RenderStepped:Connect(function(deltaTime)
                if Main:FindFirstChild("Elements")
                and Main:FindFirstChild("Elements"):FindFirstChild("Template"):FindFirstChild("Toggle"):FindFirstChild("Switch"):FindFirstChild("UIGradient") then
                    uitoggleG = Main.Elements.Template.Toggle.Switch.UIGradient
                    uitoggleG.Rotation = (uitoggleG.Rotation + 1) % 333
                    print(uitoggleG.Rotation)
                end
            end)
        end
    end
    gethiddenstuff.MakeCustomSliders = function(Main)
        local sliderrr = Main:FindFirstChild("Elements"):FindFirstChild("Template"):FindFirstChild("Slider"):FindFirstChild("Main"):FindFirstChild("Progress")
        local slideruigrads = Instance.new("UIGradient",sliderrr)
        slideruigrads.Color = ColorSequence.new(
            Color3.fromHex("ed7d1a"),
            Color3.fromHex("211aed")
            )
        if Main:FindFirstChild("Elements")
        and Main:FindFirstChild("Elements"):FindFirstChild("Template"):FindFirstChild("Slider"):FindFirstChild("Main"):FindFirstChild("Progress"):FindFirstChild("UIGradient") then
            uisliderconn = RunService.RenderStepped:Connect(function(deltaTime)
                if Main:FindFirstChild("Elements")
                and Main:FindFirstChild("Elements"):FindFirstChild("Template"):FindFirstChild("Slider"):FindFirstChild("Main"):FindFirstChild("Progress"):FindFirstChild("UIGradient") then
                    uisliderG = Main.Elements.Template.Slider.Main.Progress.UIGradient
                    uisliderG.Rotation = (uisliderG.Rotation + 1) % 333
                end
            end)
        end
    end
end

